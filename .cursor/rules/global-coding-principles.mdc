---
alwaysApply: true
---

# Global Coding Principles

## Simplicity and Code Quality

- **Always prefer simple solutions** - Choose the most straightforward approach that solves the problem
- **Avoid code duplication** - Check for existing similar code and functionality in other areas of the codebase before implementing new features
- **Keep the codebase clean and organized** - Maintain consistent formatting, naming conventions, and file structure

## Making Changes

- **Be careful and precise** - Only make changes that are explicitly requested or that you are confident are well understood and directly related to the requested change
- **Exhaust existing solutions first** - When fixing issues or bugs, do not introduce new patterns or technologies without first trying all options with the existing implementation
- **Clean up after refactoring** - If you introduce a new pattern or implementation, make sure to remove the old implementation to avoid duplicate logic

## File and Code Organization

- **Avoid overly large files** - Keep files under 200-300 lines of code. Refactor when approaching this limit
- **No unnecessary scripts** - Avoid writing script files if possible, especially for one-time operations

## Data and Environment Management

- **Mocking is for tests only** - Mock data should only be used in test environments, never in dev or production
- **No fake data patterns** - Never add stubbing or fake data patterns to code that affects dev or prod environments
- **Protect environment files** - Never overwrite `.env` files without first asking and confirming with the user

## Best Practices Summary

1. Simple over complex
2. DRY (Don't Repeat Yourself)
3. Minimal, focused changes
4. Clean up after yourself
5. Appropriate file sizes
6. Real data in dev/prod
7. Respect environment configuration
